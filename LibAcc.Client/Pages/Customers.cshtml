@page "/Customers"
@using LibAcc.Abstractions.Models
@using LibAcc.Abstractions.Services
@inject ICrudService<Book> BookService

<h1>Books Register</h1>
<hr />


<table class="form-group">
    <tr>
        <td>
            <label class="control-label">Id</label>
        </td>
        <td>
            <input type="text" class="form-control" bind="@EditingBook.BookId" readonly />
        </td>
        <td width="20">&nbsp;</td>
        <td>
            <label class="control-label">Title</label>
        </td>
        <td>
            <input type="text" class="form-control" bind="@EditingBook.Title" />
        </td>
    </tr>
    <tr>
        <td>
            <label class="control-label">Author</label>
        </td>
        <td>
            <input type="text" class="form-control" bind="@EditingBook.Author" />
        </td>
        <td width="20">&nbsp;</td>
        <td>
            <label class="control-label">Description</label>
        </td>
        <td>
            <input type="text" class="form-control" bind="@EditingBook.Description" />
        </td>
    </tr>
    <tr>
        <td>
            <label class="control-label">Print Date</label>
        </td>
        <td>
            <input type="text" class="form-control" bind="@EditingBook.PrintDate" />
        </td>
        <td width="20">&nbsp;</td>
        <td>
            <label class="control-label">Account Date</label>
        </td>
        <td>
            <input type="text" class="form-control" bind="@EditingBook.AccountDate" />
        </td>
        <td width="20">&nbsp;</td>
        <td></td>
        <td>
            <button type="submit" class="btn btn-success" onclick="@(async () => await AddBook())" style="width:220px;">Save</button>
        </td>
    </tr>
</table>



@if (Books == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Book Id</th>
                <th>Title</th>
                <th>Author</th>
                <th>Description</th>
                <th>Print Date</th>
                <th>Account Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Books)
            {
                <tr>
                    <td>@item.BookId</td>
                    <td>@item.Title</td>
                    <td>@item.Author</td>
                    <td>@item.Description</td>
                    <td>@item.PrintDate</td>
                    <td>@item.AccountDate</td>
                    <td><button class="btn btn-primary" onclick="@(async () => await EditStudent(item.BookId))" style="width:110px;">Edit</button></td>
                    <td><button class="btn btn-danger" onclick="@(async () => await DeleteStudent(item.BookId))">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
}


@functions {
Book[] Books { get; set; }

Book EditingBook { get; set; }

protected override async Task OnInitAsync()
{
    Clear();
    Books = await BookService.GetAll();
}

void Clear()
{
    EditingBook = new Book { AccountDate = DateTime.Now };

}

async Task AddBook()
{
    await BookService.AddOrUpdate(EditingBook);
    Clear();
    Books = await BookService.GetAll();
}

async Task EditStudent(int id)
{
    EditingBook = await BookService.Get(id);
}

async Task DeleteStudent(int id)
{
    await BookService.Delete(id);
    Books = await BookService.GetAll();
}
}