@page "/Customers"
@using LibAcc.Abstractions.Models
@using LibAcc.Abstractions.Services
@inject ICrudService<Customer> CustomerService

<h1>Customers</h1>
<hr />
<form>
    <ColoredHeader BackGround="#05163D" Color="honeydew" Title="Add new Customer">
        <button type="reset" class="btn btn-info" onclick="@Clear">Clear</button>
    </ColoredHeader>
    <hr />
    <table class="form-group">
        <tr>
            <td>
                <label class="control-label">Id</label>
            </td>
            <td>
                <input type="text" class="form-control" bind="@EditingCustomer.CustomerId" readonly />
            </td>
            <td width="20">&nbsp;</td>
            <td>
                <label class="control-label">Phone Number</label>
            </td>
            <td>
                <input type="text" class="form-control" bind="@EditingCustomer.PhoneNumber" />
            </td>
        </tr>
        <tr>
            <td>
                <label class="control-label">First Name</label>
            </td>
            <td>
                <input type="text" class="form-control" bind="@EditingCustomer.FirstName" />
            </td>
            <td width="20">&nbsp;</td>
            <td>
                <label class="control-label">Last Name</label>
            </td>
            <td>
                <input type="text" class="form-control" bind="@EditingCustomer.LastName" />
            </td>
        </tr>
        <tr>
            <td>
                <label class="control-label">Additional Info</label>
            </td>
            <td>
                <input type="text" class="form-control" bind="@EditingCustomer.AdditionalInfo" />
            </td>
            <td width="20">&nbsp;</td>
            <td></td>
            <td>
                <button type="button" class="btn btn-success" onclick="@(async () => await Add())" style="width:220px;">Save</button>
            </td>
        </tr>
    </table>
</form>
<ColoredHeader BackGround="#0A2464" Color="honeydew" Title="Customer list" />


@if (CustomerList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Customer Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Phone Number</th>
                <th>Additional Info</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in CustomerList)
            {
                <tr>
                    <td>@item.CustomerId</td>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.PhoneNumber</td>
                    <td>@item.AdditionalInfo</td>
                    <td><button class="btn btn-primary" onclick="@(async () => await Edit(item.CustomerId))" style="width:110px;">Edit</button></td>
                    <td><button class="btn btn-danger" onclick="@(async () => await Delete(item.CustomerId))">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
}


@functions {
    Customer[] CustomerList { get; set; }

    Customer EditingCustomer { get; set; }

    protected override async Task OnInitAsync()
    {
        Clear();
        CustomerList = await CustomerService.GetAll();
    }

    void Clear()
    {
        EditingCustomer = new Customer();
    }

    async Task Add()
    {
        await CustomerService.AddOrUpdate(EditingCustomer);
        Clear();
        CustomerList = await CustomerService.GetAll();
    }

    async Task Edit(int id)
    {
        EditingCustomer = await CustomerService.Get(id);
    }

    async Task Delete(int id)
    {
        await CustomerService.Delete(id);
        CustomerList = await CustomerService.GetAll();
    }
}